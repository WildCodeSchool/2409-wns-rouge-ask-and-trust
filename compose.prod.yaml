services:
    # Frontend service (React + Vite)
    frontend:
        image: yohangh/askandtrust-frontend:${VERSION}
        # ports:
        #     - "5173:5173" # Exposes port 5173 to access Vite from the host
        environment:
            - VITE_NODE_ENV=production
        command: ["npm", "run", "dev"] # Serve built assets (no HMR)
        # Unused options, but useful in other cases
        # restart: always # Recreate the container in case of failure
        depends_on:
            - backend # Wait for the backend to be ready (useful if necessary)
        networks:
            - frontend_network_prod # To be configured if a specific network is required

    # Backend service (Express.js)
    backend:
        image: yohangh/askandtrust-backend:${VERSION}
        # ports:
        #     - "3310:3310" # Exposes port 3310 to access the backend from the host
        environment:
            - DB_HOST=db
        env_file:
            - .env # Loads environment variables from a file
        command: ["npm", "start"] # Start the Express.js server (hot reload enabled with nodemon if configured)
        depends_on:
            db:
                condition: service_healthy
        networks:
            - frontend_network_prod
            - backend_network_prod

        # Unused options, but useful in other cases
        # restart: always # Recreate the container in case of failure

    db:
        image: postgres:15
        restart: always # Recreate the container in case of failure
        ports:
            - "5432:5432" # Production uses default PostgreSQL port
        env_file:
            - .database.env
        volumes:
            - db_data_prod:/var/lib/postgresql/data
        networks:
            - backend_network_prod
        healthcheck: # To ensure that PostgreSQL is ready before starting the backend.
            test:
                [
                    "CMD-SHELL",
                    "pg_isready -U ask_and_trust -d ask_and_trust -h localhost",
                ]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 5s

    nginx:
        image: nginx
        volumes:
            # ./nginx => in the host machine
            # on the right => where it is in the docker container
            - ./nginx:/etc/nginx
        ports:
            - ${GATEWAY_PORT_PROD}:80 # Production-specific variable
        depends_on:
            - backend
            - frontend
        networks:
            - backend_network_prod
            - frontend_network_prod

# Networks (useful for isolating services)
networks:
    backend_network_prod:
        driver: bridge
    frontend_network_prod:
        driver: bridge

# Volumes (to persist data like databases)
volumes:
    db_data_prod: # Volume for the database
        driver: local
