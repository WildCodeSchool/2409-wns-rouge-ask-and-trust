name: Client Tests Workflow

# When this workflow is activated
on: 
  pull_request:

jobs:
  # Job 1: Preparation and cleanup
  prepare:
    name: Prepare Environment
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '23'
          cache: 'npm'

      - name: Clean npm state
        run: |
          rm -rf node_modules
          rm -rf package-lock.json
          cd ./app/frontend
          rm -rf node_modules
          rm -rf package-lock.json
          cd ../backend
          rm -rf node_modules
          rm -rf package-lock.json
          cd ../..
          npm cache clean --force

      - name: Install root dependencies
        run: npm install

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            app/frontend/node_modules
            app/backend/node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}

  # Job 2: Frontend tests
  test-frontend:
    name: Frontend Tests
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '23'
          cache: 'npm'

      - 

      - name: Restore dependencies cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            app/frontend/node_modules
            app/backend/node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies if cache miss
        run: |
          if [ ! -d "node_modules" ]; then npm install; fi
          cd ./app/frontend
          if [ ! -d "node_modules" ]; then npm install; fi

      - name: Run frontend tests
        run: |
          cd ./app/frontend
          npm run test

  # Job 3: Backend tests
  test-backend:
    name: Backend Tests
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '23'
          cache: 'npm'

      - name: Restore dependencies cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            app/frontend/node_modules
            app/backend/node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies if cache miss
        run: |
          if [ ! -d "node_modules" ]; then npm install; fi
          cd ./app/backend
          if [ ! -d "node_modules" ]; then npm install; fi

      - name: Run backend tests
        run: |
          cd ./app/backend
          npm run test
