name: Docker Build Staging Workflow

# When this workflow is activated
on:
  pull_request:
    types: 
      - opened 
      - reopened 
      - synchronize
      - edited

jobs:
  extract-version:
      if: github.base_ref == 'staging'
      runs-on: ubuntu-latest
      outputs:
      version: ${{ steps.get_version.outputs.VERSION }}
      steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Bump version and changelog with standard-version
        run: npx standard-version

      - name: Configure git author (for push)
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Push release commit and tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: git push --follow-tags origin ${{ github.ref_name }}

      - name: Read version from package.json
        id: get_version
        run: |
          VERSION=$(cat package.json | jq -r '.version')
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

  docker-build-staging:
    # Run if client test is a success
    needs: extract-version
    # Only build docker image when merging on staging
    if: github.base_ref == 'staging'
    runs-on: ubuntu-latest
    # for existing actions, we need the keyword "uses"
    steps:
      # Clone the GitHub repository in GitHub Actions Virtual Machine
      # Make the files available by the workflow
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Recovery all tags

      # Enable to built multi-architectures images
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Init Docker Buildx, a Docker Build extension
      # Allow parallel build, cache, etc. And build-push-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login to Docker Hub with secrets stored in GitHub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
         username: ${{ secrets.DOCKERHUB_USERNAME }}
         password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build Docker image and push it in DockerHub
      - name: Build and push frontend
        uses: docker/build-push-action@v6
        with:
         push: true
          # Indicate where is the app to build
         context: "{{defaultContext}}:app/frontend"
          # DockerHub user's name and app's name
         tags: ${{ secrets.DOCKERHUB_USERNAME }}/askandtrust-frontend:${{ needs.extract-version.outputs.version }}

      # Build Docker image and push it in DockerHub
      - name: Build and push backend
        uses: docker/build-push-action@v6
        with:
         push: true
          # Indicate where is the app to build
         context: "{{defaultContext}}:app/backend"
          # DockerHub user's name and app's name
         tags: ${{ secrets.DOCKERHUB_USERNAME }}/askandtrust-backend:${{ needs.extract-version.outputs.version }}